{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x02353884a5f30c5cCB21B64725C581b12649AC07",
    "txHash": "0x039aeb6aa52dfa2769c8d7d12585a4f636b63c62231682ecd4d638baa710f58c",
    "deployTransaction": {
      "hash": "0x039aeb6aa52dfa2769c8d7d12585a4f636b63c62231682ecd4d638baa710f58c",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xF1b6fceac6784a26360056973C41e0017DeE12e4",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x4190aafc"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 81,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xf5ec811b5248a5e47398d501540cec931b8750f318ea6ff3ad83592a3e345ab8",
      "s": "0x44c45c9f326d10b04f4837f4e6ac0c4f54e32892e929ff3013ffacb9621564c2",
      "v": 43,
      "creates": "0x02353884a5f30c5cCB21B64725C581b12649AC07",
      "chainId": 4
    }
  },
  "proxies": [
    {
      "address": "0x639146a2eC8a352330a98c7e27933122C7202Eb5",
      "txHash": "0x943a11f322bd494fd18808f7541c7d52815417446a6ddebc3050cd6b09134d40",
      "kind": "transparent"
    },
    {
      "address": "0xCFfC01FEF09173E8b4Cd7762C7BBF33cb9c5515e",
      "txHash": "0x20f8d8b044c4c989c4e7294c07cff214874457c5204379bd35421dc47332133b",
      "kind": "transparent"
    },
    {
      "address": "0x4181BbF394A5c929A20568609b61fD294C58a66a",
      "txHash": "0xc46225367164e32df9df6d28eddd568e9dfa7425dc2da121345cf1eb57e7fd54",
      "kind": "transparent"
    },
    {
      "address": "0xA00A4469278cc1D05098894F9B51c129a058B8Ef",
      "txHash": "0x0ea4ef555bd7feaf7d91e3b96ce976f9642bbe8be313a6b86285c49291f1db65",
      "kind": "beacon"
    },
    {
      "address": "0x00bd56Da839a79333271f6FBaEF75D192c3b19CE",
      "txHash": "0x6acae704060f7cae8b111fe7778d834bfc20fb2a6a94fa80954840fae623a8bd",
      "kind": "beacon"
    },
    {
      "address": "0xa2907b362387151eA52e91F3dDa1C157E00332BA",
      "txHash": "0x8c97267a7ce1cbee3189774744bb2f438414ca55b661a4bdc7edb775fe55ed9e",
      "kind": "transparent"
    },
    {
      "address": "0x5b83e9C36D2dF42D4B5500765236C7C9F124b8AF",
      "txHash": "0xf28b4ffeaf85c8fcf5627e89f8b61cc01ce6fb12d3629aef4aff60db95c184af",
      "kind": "transparent"
    },
    {
      "address": "0x39Cf25b1C8D810a786fd31Fec89263bDbCaf2397",
      "txHash": "0xb8a1ee5f0135fc91dab726424941191bb00d273512dfd9021c211b5974ae91b2",
      "kind": "transparent"
    },
    {
      "address": "0x0738Af5a0e85196f3c16A11741265Be39C714290",
      "txHash": "0x81da5a936d384a3b2c74364f9eccc77690a89b5c203daa0a173d36361579bcf5",
      "kind": "beacon"
    },
    {
      "address": "0x187c2cbF294038184fea3C08D20A059e89E73217",
      "txHash": "0x2694f293621f190c1b55c023c25755f4f632f9cfd83bf4d74c7f75729847b439",
      "kind": "beacon"
    }
  ],
  "impls": {
    "6b47a9b4e5da4e01220a4193cf08c40f90a530bbe23a54632c7a5f21dfdb4c85": {
      "address": "0x96d29515464bA59fCa462e53369e0071800f0c23",
      "txHash": "0x5e1f6db9b8544e38db5f7202e3581b7c55b37a7878cc7c0ffc4640078d7cd7b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "RolesValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/RolesValidator.sol:15"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "defaults",
            "type": "t_mapping(t_address,t_struct(Auctioneer)1020_storage)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:36"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "auctioneers",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)1020_storage)))",
            "src": "contracts/roles/AuctioneerUpgradable.sol:39"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "registrationFee",
            "type": "t_uint256",
            "src": "contracts/roles/AuctioneerUpgradable.sol:42"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:45"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "banned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:46"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/AuctioneerUpgradable.sol:179"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Auctioneer)1020_storage)": {
            "label": "mapping(address => struct AuctioneerUpgradable.Auctioneer)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Auctioneer)1020_storage": {
            "label": "struct AuctioneerUpgradable.Auctioneer",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "fee",
                "type": "t_uint96"
              },
              {
                "label": "cancelValue",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)1020_storage)))": {
            "label": "mapping(address => mapping(address => mapping(address => struct AuctioneerUpgradable.Auctioneer)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)1020_storage))": {
            "label": "mapping(address => mapping(address => struct AuctioneerUpgradable.Auctioneer))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "0a24d2564c7a4d13f453a10cea818efac34d0ca9464fbb6911252e366f394684": {
      "address": "0xAecF51c892F917e4f8f89Cf6E649d9092C6dAF87",
      "txHash": "0xa0964b928482fdf8ba5d796bef3483a554cb0b4c5ca84a79117d7df2135f9339",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "RolesValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/RolesValidator.sol:15"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "stake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/roles/MinterUpgradeable.sol:50"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "defaults",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/roles/MinterUpgradeable.sol:55"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "minters",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
            "src": "contracts/roles/MinterUpgradeable.sol:57"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "defaultsRegistry",
            "type": "t_array(t_struct(DefaultMinter)1888_storage)dyn_storage",
            "src": "contracts/roles/MinterUpgradeable.sol:60"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "mintersRegistry",
            "type": "t_array(t_struct(Minter)1877_storage)dyn_storage",
            "src": "contracts/roles/MinterUpgradeable.sol:61"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "splitterImplementationContract",
            "type": "t_address",
            "src": "contracts/roles/MinterUpgradeable.sol:64"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "splitters",
            "type": "t_mapping(t_bytes32,t_struct(Part)17653_storage)",
            "src": "contracts/roles/MinterUpgradeable.sol:65"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "withdrawSplits",
            "type": "t_mapping(t_address,t_array(t_struct(Part)17653_storage)dyn_storage)",
            "src": "contracts/roles/MinterUpgradeable.sol:68"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "depositBPS",
            "type": "t_mapping(t_address,t_uint96)",
            "src": "contracts/roles/MinterUpgradeable.sol:70"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "defaultPayoutMapping",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Part)17653_storage)dyn_storage))",
            "src": "contracts/roles/MinterUpgradeable.sol:73"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "defaultRoyaltySplittersMapping",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bytes32))",
            "src": "contracts/roles/MinterUpgradeable.sol:74"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "minDefaultMinterRoyalty",
            "type": "t_uint96",
            "src": "contracts/roles/MinterUpgradeable.sol:77"
          },
          {
            "contract": "MinterUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/MinterUpgradeable.sol:406"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(address => mapping(address => uint256)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_struct(DefaultMinter)1888_storage)dyn_storage": {
            "label": "struct MinterUpgradeable.DefaultMinter[]"
          },
          "t_struct(DefaultMinter)1888_storage": {
            "label": "struct MinterUpgradeable.DefaultMinter",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "fee",
                "type": "t_uint96"
              },
              {
                "label": "cancelValue",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_struct(Minter)1877_storage)dyn_storage": {
            "label": "struct MinterUpgradeable.Minter[]"
          },
          "t_struct(Minter)1877_storage": {
            "label": "struct MinterUpgradeable.Minter",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "fee",
                "type": "t_uint96"
              },
              {
                "label": "cancelValue",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              },
              {
                "label": "creators",
                "type": "t_array(t_struct(Part)17653_storage)dyn_storage"
              },
              {
                "label": "royalties",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_struct(Part)17653_storage)dyn_storage": {
            "label": "struct LibPart.Part[]"
          },
          "t_struct(Part)17653_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_bytes32,t_struct(Part)17653_storage)": {
            "label": "mapping(bytes32 => struct LibPart.Part)"
          },
          "t_mapping(t_address,t_array(t_struct(Part)17653_storage)dyn_storage)": {
            "label": "mapping(address => struct LibPart.Part[])"
          },
          "t_mapping(t_address,t_uint96)": {
            "label": "mapping(address => uint96)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Part)17653_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct LibPart.Part[]))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bytes32))": {
            "label": "mapping(address => mapping(address => bytes32))"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "c6d679cd013d14719111f0caf4c248889a3a27cc39b7d622710ca33dbe5dcce2": {
      "address": "0xC14dCB8f5a09b9FaedFcE8e60FE9b1Ac64334033",
      "txHash": "0x4d878bd1b6549878b8c76a549032e4fabe11451f79404c70cb5f4a15a9614000",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "AuctionValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/exchange/AuctionValidator.sol:15"
          },
          {
            "contract": "Auction",
            "label": "stake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/exchange/Auction.sol:34"
          },
          {
            "contract": "Auction",
            "label": "auctioneer",
            "type": "t_address",
            "src": "contracts/exchange/Auction.sol:36"
          },
          {
            "contract": "Auction",
            "label": "platformFee",
            "type": "t_uint96",
            "src": "contracts/exchange/Auction.sol:37"
          },
          {
            "contract": "Auction",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/exchange/Auction.sol:243"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ba78f47b7e907d162275c528bfbd18c766de98b8a40e7883ab904d19d255161c": {
      "address": "0xA5C0d0734D0451bFe66cc10c4738473Aca65c9D6",
      "txHash": "0x520d49f9ff1afb623d963879ca4826dc349756476dec971c6d2d5ec5d9fb22b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)15989_storage)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)15366_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:38"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:44"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:47"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:50"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:53"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:56"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_burnedTokens",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:93"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)40_storage",
            "src": "contracts/tokens/erc-721/ERC721Upgradeable.sol:495"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "_auctionContract",
            "type": "t_address",
            "src": "contracts/tokens/erc-721/ERC721DefaultApproval.sol:9"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "defaultApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/tokens/erc-721/ERC721DefaultApproval.sol:10"
          },
          {
            "contract": "ERC721DefaultApproval",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721DefaultApproval.sol:38"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721BurnableUpgradeable.sol:40"
          },
          {
            "contract": "HasContractURI",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts/tokens/HasContractURI.sol:9"
          },
          {
            "contract": "HasContractURI",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/HasContractURI.sol:29"
          },
          {
            "contract": "ERC721Base",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721Base.sol:47"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "Mint721Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/Mint721Validator.sol:16"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "creatorSignedRoyalty",
            "type": "t_mapping(t_uint256,t_struct(Part)17653_storage)",
            "src": "contracts/tokens/@rarible/royalties/contracts/impl/AbstractRoyalties.sol:10"
          },
          {
            "contract": "AbstractRoyalties",
            "label": "royaltySplitterBytesMap",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "contracts/tokens/@rarible/royalties/contracts/impl/AbstractRoyalties.sol:11"
          },
          {
            "contract": "ERC721Lazy",
            "label": "global",
            "type": "t_bool",
            "src": "contracts/tokens/erc-721/ERC721Lazy.sol:35"
          },
          {
            "contract": "ERC721Lazy",
            "label": "minter",
            "type": "t_address",
            "src": "contracts/tokens/erc-721/ERC721Lazy.sol:36"
          },
          {
            "contract": "ERC721Lazy",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721Lazy.sol:226"
          },
          {
            "contract": "ERC721GlipLive",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-721/ERC721GlipLive.sol:38"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Part)17653_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part)"
          },
          "t_struct(Part)17653_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable"
              },
              {
                "label": "value",
                "type": "t_uint96"
              }
            ]
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(UintSet)15989_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)15989_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)15603_storage"
              }
            ]
          },
          "t_struct(Set)15603_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_struct(UintToAddressMap)15366_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)15048_storage"
              }
            ]
          },
          "t_struct(Map)15048_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)15040_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)15040_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)15040_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "38197872d43a782471b90f4fde95f964b1b9fd3ca824bd720e27d91b701cf6ae": {
      "address": "0x3bcFe1582f44bbEf22b9A25D22feF254280C94B4",
      "txHash": "0x844bc69c411328a2d2cb831a625ac5640e9c76bdfd05228da4a40eec079073ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "RolesValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/RolesValidator.sol:15"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "defaults",
            "type": "t_mapping(t_address,t_struct(Auctioneer)81_storage)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:37"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "auctioneers",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)81_storage)))",
            "src": "contracts/roles/AuctioneerUpgradable.sol:40"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "registrationFee",
            "type": "t_uint256",
            "src": "contracts/roles/AuctioneerUpgradable.sol:43"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "registered",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:46"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "banned",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/roles/AuctioneerUpgradable.sol:47"
          },
          {
            "contract": "AuctioneerUpgradable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/roles/AuctioneerUpgradable.sol:181"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Auctioneer)81_storage)": {
            "label": "mapping(address => struct AuctioneerUpgradable.Auctioneer)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Auctioneer)81_storage": {
            "label": "struct AuctioneerUpgradable.Auctioneer",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "auctionType",
                "type": "t_uint8"
              },
              {
                "label": "fee",
                "type": "t_uint96"
              },
              {
                "label": "cancelValue",
                "type": "t_uint256"
              },
              {
                "label": "start",
                "type": "t_uint256"
              },
              {
                "label": "end",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)81_storage)))": {
            "label": "mapping(address => mapping(address => mapping(address => struct AuctioneerUpgradable.Auctioneer)))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(Auctioneer)81_storage))": {
            "label": "mapping(address => mapping(address => struct AuctioneerUpgradable.Auctioneer))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "74a75524ddce17b33abe6423917fe2f9995c9f015e5fefd0fca3de8689799d1b": {
      "address": "0xeD8798804E4dC0405306Af2e780e1ba89543474b",
      "txHash": "0x0100b7c388703d4e1c756c714a10693f78d81e546a8e843cfa06bc7f4f35796e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:76"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:27"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:28"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/@openzeppelin/contracts-upgradeable/drafts/EIP712Upgradeable.sol:120"
          },
          {
            "contract": "ERC1271Validator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/tokens/erc-1271/ERC1271Validator.sol:36"
          },
          {
            "contract": "AuctionValidator",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/exchange/AuctionValidator.sol:15"
          },
          {
            "contract": "Auction",
            "label": "stake",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/exchange/Auction.sol:34"
          },
          {
            "contract": "Auction",
            "label": "auctioneer",
            "type": "t_address",
            "src": "contracts/exchange/Auction.sol:36"
          },
          {
            "contract": "Auction",
            "label": "platformFee",
            "type": "t_uint96",
            "src": "contracts/exchange/Auction.sol:37"
          },
          {
            "contract": "Auction",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/exchange/Auction.sol:312"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
